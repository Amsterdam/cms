# Drupal with PostgreSQL
#
# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)
#
# This is a close copy of an example at https://hub.docker.com/_/drupal
# Differences:
#  - environment variables are defined (to be read by Drupal's settings.php)
#  - the 'sites' volume is not an anonymous volume
#  - the other volumes have been removed (as the CMS will be headless)

version: '3.1'

services:

  drupal:
    build: .
    ports:
      - 9090:80
    volumes:
      - ./shared:/app/shared
      - ./data/sites:/var/www/html/sites
      - /etc/ssl/certs/:/etc/ssl/certs/:ro
    environment:
      DRUPAL_DBNAME: cms
      DRUPAL_DBHOST: database
      DRUPAL_DBPORT: 5432
      DRUPAL_USERNAME: cms
      DRUPAL_PASSWORD: insecure

  database:
    image: amsterdam/postgres11
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: cms
      POSTGRES_USER: cms
      POSTGRES_PASSWORD: insecure
    volumes:
      - "~/.ssh/datapunt.key:/root/.ssh/datapunt.key"
      - ./db:/var/lib/postgresql/data

  elasticsearch:
    image: amsterdam/elasticsearch6
    command: elasticsearch -Ehttp.host=0.0.0.0 -Etransport.host=127.0.0.1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "~/.ssh/datapunt.key:/root/.ssh/datapunt.key"      